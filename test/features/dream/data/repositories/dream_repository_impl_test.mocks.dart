// Mocks generated by Mockito 5.4.4 from annotations
// in dream_catcher/test/features/dream/data/repositories/dream_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dream_catcher/features/dream/data/data-sources/dream_data_source.dart'
    as _i4;
import 'package:dream_catcher/features/dream/data/models/dream_detail_model.dart'
    as _i3;
import 'package:dream_catcher/features/dream/data/models/dream_list_model.dart'
    as _i2;
import 'package:dream_catcher/features/dream/domain/entities/dream_detail.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDreamListModel_0 extends _i1.SmartFake
    implements _i2.DreamListModel {
  _FakeDreamListModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDreamDetailModel_1 extends _i1.SmartFake
    implements _i3.DreamDetailModel {
  _FakeDreamDetailModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DreamDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDreamDataSource extends _i1.Mock implements _i4.DreamDataSource {
  @override
  _i5.Future<_i2.DreamListModel> getDreams() => (super.noSuchMethod(
        Invocation.method(
          #getDreams,
          [],
        ),
        returnValue: _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #getDreams,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #getDreams,
            [],
          ),
        )),
      ) as _i5.Future<_i2.DreamListModel>);

  @override
  _i5.Future<_i3.DreamDetailModel> getDream(String? dreamId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDream,
          [dreamId],
        ),
        returnValue:
            _i5.Future<_i3.DreamDetailModel>.value(_FakeDreamDetailModel_1(
          this,
          Invocation.method(
            #getDream,
            [dreamId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.DreamDetailModel>.value(_FakeDreamDetailModel_1(
          this,
          Invocation.method(
            #getDream,
            [dreamId],
          ),
        )),
      ) as _i5.Future<_i3.DreamDetailModel>);

  @override
  _i5.Future<void> saveDream(_i3.DreamDetailModel? dream) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDream,
          [dream],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateDream(_i3.DreamDetailModel? dream) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDream,
          [dream],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteDream(String? dreamId) => (super.noSuchMethod(
        Invocation.method(
          #deleteDream,
          [dreamId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.DreamListModel> searchDreams(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchDreams,
          [query],
        ),
        returnValue: _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #searchDreams,
            [query],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #searchDreams,
            [query],
          ),
        )),
      ) as _i5.Future<_i2.DreamListModel>);

  @override
  _i5.Future<_i2.DreamListModel> filterDreamsByMood(String? mood) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterDreamsByMood,
          [mood],
        ),
        returnValue: _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #filterDreamsByMood,
            [mood],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #filterDreamsByMood,
            [mood],
          ),
        )),
      ) as _i5.Future<_i2.DreamListModel>);

  @override
  _i5.Future<_i2.DreamListModel> filterDreamsByDate(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterDreamsByDate,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #filterDreamsByDate,
            [
              startDate,
              endDate,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.DreamListModel>.value(_FakeDreamListModel_0(
          this,
          Invocation.method(
            #filterDreamsByDate,
            [
              startDate,
              endDate,
            ],
          ),
        )),
      ) as _i5.Future<_i2.DreamListModel>);
}

/// A class which mocks [DreamDetailModelFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockDreamDetailModelFactory extends _i1.Mock
    implements _i3.DreamDetailModelFactory {
  @override
  _i3.DreamDetailModel fromEntity(_i6.DreamDetail? entity) =>
      (super.noSuchMethod(
        Invocation.method(
          #fromEntity,
          [entity],
        ),
        returnValue: _FakeDreamDetailModel_1(
          this,
          Invocation.method(
            #fromEntity,
            [entity],
          ),
        ),
        returnValueForMissingStub: _FakeDreamDetailModel_1(
          this,
          Invocation.method(
            #fromEntity,
            [entity],
          ),
        ),
      ) as _i3.DreamDetailModel);

  @override
  _i3.DreamDetailModel fromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [json],
        ),
        returnValue: _FakeDreamDetailModel_1(
          this,
          Invocation.method(
            #fromJson,
            [json],
          ),
        ),
        returnValueForMissingStub: _FakeDreamDetailModel_1(
          this,
          Invocation.method(
            #fromJson,
            [json],
          ),
        ),
      ) as _i3.DreamDetailModel);
}
